import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';

import {connect} from 'react-redux';
import {addTask, sortTasks} from '../../redux/actions/actions';

import {
    Wrapper, 
    Header, 
    Content, 
    Footer, 
    Button
} from './styled';

class Dialog extends PureComponent {

    static propTypes = {
        order: PropTypes.bool,
        title: PropTypes.string,
        children: PropTypes.node,
        addTask: PropTypes.func,
        sortTasks: PropTypes.func
    };

    static defaultProps = {
        order: true,
        title: '',
        children: null,
        addTask: () => null,
        sortTasks: () => null
    };

  render() {

    const {
        order,
        title, 
        children, 
        addTask, 
        sortTasks
    } = this.props;
    
    return (
      <Wrapper>
            <Header>{title}</Header>
            <Content>
                {children}
            </Content>
            <Footer>
                <Button onClick={sortTasks}>
                    <span>Sort</span>
                    {
                        order
                        ?   <svg 
                                x="0px" 
                                y="0px" 
                                viewBox="0 0 97.68 97.68" 
                            >
                                <g>
                                    <g>
                                        <path d="M42.72,65.596h-8.011V2c0-1.105-0.896-2-2-2h-16.13c-1.104,0-2,0.895-2,2v63.596H6.568c-0.77,0-1.472,0.443-1.804,1.137
                                            C4.432,67.428,4.528,68.25,5.01,68.85l18.076,26.955c0.38,0.473,0.953,0.746,1.558,0.746s1.178-0.273,1.558-0.746L44.278,68.85
                                            c0.482-0.6,0.578-1.422,0.246-2.117C44.192,66.039,43.49,65.596,42.72,65.596z"/>
                                        <path d="M92.998,39.315L79.668,1.541c-0.282-0.799-1.038-1.334-1.886-1.334h-3.861c-0.106,0-0.213,0.008-0.317,0.025
                                            c-0.104-0.018-0.21-0.025-0.318-0.025h-3.76c-0.85,0-1.605,0.535-1.888,1.336L54.362,39.317c-0.215,0.611-0.12,1.289,0.255,1.818
                                            c0.375,0.529,0.982,0.844,1.632,0.844h5.774c0.88,0,1.656-0.574,1.913-1.416l2.535-8.324H80.89l2.536,8.324
                                            c0.256,0.842,1.033,1.416,1.913,1.416h5.771c0.648,0,1.258-0.314,1.633-0.844C93.119,40.604,93.213,39.926,92.998,39.315z
                                            M68.864,24.283c2.397-7.77,4.02-13.166,4.82-16.041l4.928,16.041H68.864z"/>
                                        <path d="M87.255,89.838H69.438l18.928-27.205c0.232-0.336,0.357-0.734,0.357-1.143v-3.416c0-1.104-0.896-2-2-2h-26.07
                                            c-1.104,0-2,0.896-2,2v3.844c0,1.105,0.896,2,2,2h16.782L58.481,91.094c-0.234,0.336-0.359,0.734-0.359,1.145v3.441
                                            c0,1.105,0.896,2,2,2h27.135c1.104,0,2-0.895,2-2v-3.842C89.255,90.732,88.361,89.838,87.255,89.838z"/>
                                    </g>
                                </g>
                            </svg>
                        :   <svg 
                                x="0px" 
                                y="0px"
                                viewBox="0 0 97.761 97.762"
                            >
                                <g>
                                    <g>
                                        <path d="M42.761,65.596H34.75V2c0-1.105-0.896-2-2-2H16.62c-1.104,0-2,0.895-2,2v63.596H6.609c-0.77,0-1.472,0.443-1.804,1.137
                                            c-0.333,0.695-0.237,1.519,0.246,2.117l18.076,26.955c0.38,0.473,0.953,0.746,1.558,0.746s1.178-0.273,1.558-0.746L44.319,68.85
                                            c0.482-0.6,0.578-1.422,0.246-2.117C44.233,66.039,43.531,65.596,42.761,65.596z"/>
                                        <path d="M93.04,95.098L79.71,57.324c-0.282-0.799-1.038-1.334-1.887-1.334h-3.86c-0.107,0-0.213,0.008-0.318,0.024
                                            c-0.104-0.018-0.21-0.024-0.318-0.024h-3.76c-0.849,0-1.604,0.535-1.887,1.336L54.403,95.1c-0.215,0.611-0.12,1.289,0.255,1.818
                                            s0.983,0.844,1.633,0.844h5.773c0.88,0,1.657-0.574,1.913-1.416l2.536-8.324h14.419l2.536,8.324
                                            c0.256,0.842,1.033,1.416,1.913,1.416h5.771c0.649,0,1.258-0.314,1.633-0.844C93.16,96.387,93.255,95.709,93.04,95.098z
                                            M68.905,80.066c2.398-7.77,4.021-13.166,4.82-16.041l4.928,16.041H68.905z"/>
                                        <path d="M87.297,34.053H69.479L88.407,6.848c0.233-0.336,0.358-0.734,0.358-1.143V2.289c0-1.104-0.896-2-2-2H60.694
                                            c-1.104,0-2,0.896-2,2v3.844c0,1.105,0.896,2,2,2h16.782L58.522,35.309c-0.233,0.336-0.358,0.734-0.358,1.146v3.441
                                            c0,1.105,0.896,2,2,2h27.135c1.104,0,2-0.895,2-2v-3.842C89.297,34.947,88.402,34.053,87.297,34.053z"/>
                                    </g>
                                </g>
                            </svg>
                    }
                    
                </Button>
                <Button onClick={addTask}><span>Add task</span></Button>
            </Footer>
      </Wrapper>
    )
  }
}

function mapStateToProps(state) {
    const {order} = state;
    return {
        order
    }
}

function mapDispatchToProps(dispatch) {
    return {
        addTask: () => dispatch(addTask()),
        sortTasks: order => dispatch(sortTasks(order)),
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(Dialog);
